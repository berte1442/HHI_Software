@model HHI_InspectionSoftware.ViewModels.TemplateModel

@using HHI_InspectionSoftware.ViewModels;

<div style="background-color: lightgreen">

    <h4 style="color: green">Add Areas</h4>

    <div class="form-group">
        @Html.LabelFor(model => model.Area.Name, htmlAttributes: new { @class = "control-label col-md-2", style = "color: green" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Area.Name, new { htmlAttributes = new { @class = "form-control", Value = "" } })
            @Html.ValidationMessageFor(model => model.Area.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Area" class="btn btn-success" formaction="Update" asp-controller="CreateTemplates" />
        </div>
    </div>
</div>

<div id="areaTable">
    @{ if (Model != null && Model.Template != null && Model.Template.Areas != null)
        {
            <hr />
            <h2 style="color: green">Areas</h2>
            <button id="areasBtn" class="btn btn-default" type="button" data-toggle="collapse" data-target="#display" aria-expanded="true" aria-controls="display">
                Hide Areas
            </button>
        }}

    <div class="collapse in" id="display">
        @{ if (Model != null && Model.Template != null && Model.Template.Areas != null)
            {
                foreach (var item in Model.Template.Areas)
                {
                    <div class="form-group">
                        <div>
                            <hr />
                            <h3 style="color: green">"@item.Name"</h3>
                            <hr />
                        </div>
                        <div class="col-md-2">
                            @if (item.Limitations != null && item.Limitations.ToList().Count > 0)
                            {
                                <h4 style="color: orange">Limitations:</h4>
                            }
                            @foreach (var l in item.Limitations)
                            {
                                <a href="~/Limitations/Details/@l.ID"><h4>@l.Name</h4></a><br />
                            }
                        </div>
                        <div class="col-md-2">
                            @if (item.CheckItems != null && item.Limitations.ToList().Count > 0)
                            {
                                <h4 style="color: green">Check Items:</h4>
                            }
                            @foreach (var c in item.CheckItems)
                            {
                                <a href="~/CheckItems/Details/@c.ID"><h4>@c.Name</h4></a><br />
                            }
                        </div>
                        <div class="row">
                            <div>
                                <button id="limitationBtn" class="btn btn-warning" type="button" data-toggle="collapse" data-target="#@item.ID" aria-expanded="false" aria-controls="@item.ID">
                                    Add Limitation
                                </button>

                                @{var id = "0" + item.ID.ToString();
                                }

                                <button id="checkItemBtn" class="btn btn-success" type="button" data-toggle="collapse" data-target="#@id" aria-expanded="false" aria-controls="@id">
                                    Add Check Item
                                </button>
                                <button id="deleteBtn" class="btn btn-danger" formaction="DeleteArea" asp-controller="CreateTemplates">
                                    Delete Area
                                </button>
                            </div>
                            <div class="collapse col-md-4" id="@item.ID">

                                @{ var limitationFormID = item.ID.ToString() + "LimitationForm";}

                                <form id="@limitationFormID">
                                    <hr />

                                    <h2>Limitation</h2>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Limitation.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Limitation.Name, new { htmlAttributes = new { @class = "form-control", Value = "" } })
                                            @Html.ValidationMessageFor(model => model.Limitation.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Limitation.SystemID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.Limitation.SystemID, ViewBag.Systems as SelectList, "Select System..", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Limitation.SystemID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Limitation.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Limitation.Description, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Limitation.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.HiddenFor(model => model.Limitation.AreaID, new { @Value = item.ID })
                                            @Html.ValidationMessageFor(model => model.Limitation.AreaID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.HiddenFor(model => model.Template.ID, new { @Value = item.TemplateID })
                                            @Html.ValidationMessageFor(model => model.Template.ID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div>
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Add Limitation" class="btn btn-default" formaction="SaveLimitation" asp-controller="CreateTemplates" />
                                        </div>
                                    </div>
                                </form>
                            </div>


                            <div class="form-horizontal collapse col-md-4" id="@id">

                                @{ var checkItemFormID = item.ID.ToString() + "CheckItemForm";}

                                <form id="@checkItemFormID">
                                    <hr />
                                    <h2>CheckItem</h2>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CheckItem.Name, "Check Item", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CheckItem.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CheckItem.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CheckItem.SystemID, "System", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.CheckItem.SystemID, ViewBag.Systems as SelectList, "Select System..", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CheckItem.SystemID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.HiddenFor(model => model.CheckItem.AreaID, new { @Value = item.ID })
                                            @Html.ValidationMessageFor(model => model.CheckItem.AreaID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.HiddenFor(model => model.Template.ID, new { @Value = item.TemplateID })
                                            @Html.ValidationMessageFor(model => model.Template.ID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Add Check Item" class="btn btn-default" formaction="SaveCheckItem" asp-controller="CreateTemplates" />
                                        </div>
                                    </div>
                                </form>
                            </div>

                        </div>
                    </div>
                }
            }
        }
    </div>
    @*@{ if (Model != null && Model.Template.Areas != null)

        {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("Areas")
                </th>
                <th>
                    Check Items
                </th>
                <th>
                    Limitations
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Template.Areas)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                    </td>
                    <td>
                        @{ if (item.Limitations != null)
                            {
                                foreach (var l in item.Limitations)
                                {
                                    @l.Name <br />
                                }
                            }
                        }
                    </td>


                    <td>
                        @{var divID = item.ID.ToString() + "div";}
                        <div id="@divID">
                            <button id="limitationBtn" class="btn btn-primary" type="button" data-toggle="collapse" data-target="#@item.ID" aria-expanded="false" aria-controls="@item.ID">
                                Add Limitation
                            </button>

                            <div class="collapse" id="@item.ID">
                                @{TemplateModel templateModel = Model;
                                    templateModel.Area = item;
                                }
                                @{Html.RenderPartial("_AddLimitations", templateModel);}

                            </div>

                            @{var id = "0" + item.ID.ToString();
                            }

                            <button id="checkItemBtn" class="btn btn-primary" type="button" data-toggle="collapse" data-target="#@id" aria-expanded="false" aria-controls="@id">
                                Add Check Item
                            </button>



                            <div class="form-horizontal collapse" id="@id">
                                <h2>CheckItem</h2>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CheckItem.Name, "Check Item", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CheckItem.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CheckItem.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CheckItem.SystemID, "System", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Systems", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CheckItem.SystemID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CheckItem.AreaID, "Area", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Areas", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CheckItem.AreaID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Add Check Item" class="btn btn-default" asp-action="SaveCheckItem" asp-controller="CreateTemplates" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Delete Area" class="btn btn-default" asp-action="DeleteArea" asp-controller="CreateTemplates" />
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }

        </table>
        }
        }*@
</div>

<script>
    document.getElementById('areasBtn').onclick = function () {
        if (this.innerText == "Show Areas") {
            this.innerText = "Hide Areas";
        }
        else {
            this.innerText = "Show Areas";
        }
    }

</script>
